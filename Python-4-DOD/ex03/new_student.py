import random
import string
from dataclasses import dataclass, field


def generate_id() -> str:
    """Randomly generates a string of 15 lowercases."""
    return ''.join(random.choices(string.ascii_lowercase, k=15))


@dataclass
class Student:
    """
    Represents information about students including name,
    surname, active status, login, and an ID.

    Attributes:
    - name (str): first name of the student.
    - surname (str): last name of the student.
    - active (bool): indicates whether the student is active or not.
    - login (str): student's login, generated automatically.
    - id (str): id of the student, generated by the generate_id() function.

    Methods:
    - __post_init__(self): constructor method that generates a login based
    on name + surname.
    """
    name: str
    surname: str
    active: bool = field(default=True)
    login: str = field(init=False)
    id: str = field(default_factory=generate_id, init=False)

    def __post_init__(self):
        self.login = (self.name[0] + self.surname).lower()

    def __init__(self, name: str, surname: str, active: bool = True, **kwargs):
        try:
            if 'id' in kwargs:
                raise TypeError("Student.__init__() got an unexpected keyword\
                                argument 'id'")
            if 'login' in kwargs:
                raise TypeError("Student.__init__() got an unexpected keyword\
                                argument 'login'")
            self.name = name
            self.surname = surname
            self.active = active
            self.id = generate_id()
            self.login = (self.name[0] + self.surname).lower()

        except Exception as e:
            print(type(e).__name__ + ":", e)
            exit(1)
